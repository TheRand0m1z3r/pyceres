name: Create Windows Wheels
on:
  push:
    tags:
      - v*
permissions:
  id-token: write    # Required for OIDC authentication
  contents: write

jobs:
    windows-wheels:
      runs-on: windows-latest
      strategy:
        matrix:
          python-version: [ '3.9', '3.10', '3.11', '3.12' ]
      name: Create the Windows Wheel for Python ${{ matrix.python-version }}
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0 # Required for setuptools_scm to see tags
            fetch-tags: true
        - name: Debug git tags
          run: git tag
        - name: Setup Python
          uses: actions/setup-python@v5
          with:
            python-version: ${{ matrix.python-version }}
            architecture: x64
        - name: Add msbuild to PATH
          uses: microsoft/setup-msbuild@v2
        - name: Install cmake
          uses: jwlawson/actions-setup-cmake@v2.0
          with:
            cmake-version: '3.22.x'        
        - name: Set Python environment
          run: |
            pip install -r requirements.txt
        - name: Create the wheel
          run: ./build-windows.ps1
        - name: Upload to Release
          id: upload-release-asset
          uses: svenstaro/upload-release-action@v2
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: ./dist/dplus*.whl
            file_glob: true
            tag: ${{ github.ref }}
            overwrite: true
            body: "Windows Wheels"
#        - name: Publish to PyPi
#          env:
#            PYPI_PROJECT: dplus-ceres
#          run: |
#            python -m pip install twine
#            export OIDC_TOKEN="${ACTIONS_ID_TOKEN_REQUEST_TOKEN}"
#            twine upload --repository pypi --identity-provider-token "$OIDC_TOKEN" dist/*.whl